{"ast":null,"code":"var _jsxFileName = \"/Users/ishanchopra/Documents/Hackathon/email-client/Frontend/src/Components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport { Avatar, Button, Container, Grid, Paper, Typography } from \"@material-ui/core\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport Input from \"./Input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport GoogleButton from \"react-google-button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSignedUp, setIsSignedUp] = useState(true);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  });\n\n  const handleOnSubmit = e => {\n    console.log(\"Submitted\");\n  };\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const toggle = () => {\n    setFormData({\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      firstName: \"\",\n      lastName: \"\"\n    });\n    setIsSignedUp(prev => !prev);\n    setShowPassword(false);\n    setShowConfirmPassword(false);\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword(prev => !prev);\n  };\n\n  const handleShowConfirmPassword = () => {\n    setShowConfirmPassword(prev => !prev);\n  };\n\n  const googleSuccess = res => {\n    //console.log(res);\n    const profile = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      console.log(profile, token);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = error => {\n    console.log(error);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignedUp ? \"Sign In\" : \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleOnSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [!isSignedUp && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Input, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              half: true,\n              autofocus: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Input, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"email\",\n            value: formData.email,\n            label: \"Email\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            name: \"password\",\n            value: formData.password,\n            label: \"Password\",\n            handleChange: handleChange,\n            handleShowPassword: handleShowPassword,\n            type: showPassword ? \"text\" : \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), !isSignedUp && /*#__PURE__*/_jsxDEV(Input, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            handleShowPassword: handleShowConfirmPassword,\n            handleChange: handleChange,\n            type: showConfirmPassword ? \"text\" : \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignedUp ? \"Sign in\" : \"Sign up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          clientId: \"795985652085-6ussjfntbaepe2fj9o244lntnbfk5su0.apps.googleusercontent.com\",\n          render: renderProps => /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"g-signin2\",\n            \"data-width\": \"1000\",\n            \"data-height\": \"200\",\n            children: /*#__PURE__*/_jsxDEV(GoogleButton, {\n              onClick: renderProps.onClick,\n              style: {\n                width: \"363px\",\n                marginBottom: \"10px\"\n              },\n              disabled: renderProps.disabled,\n              children: \"Sign in with Google\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this),\n          onSuccess: googleSuccess,\n          onFailure: googleFailure,\n          style: {\n            marginTop: \"100px\"\n          },\n          cookiePolicy: \"single_host_origin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: toggle,\n            children: isSignedUp ? \"Don't have an account??Sign Up\" : \"Already have an account!! Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"gVqwV4qMs6/Oy9IazCjGIwsK74k=\", false, function () {\n  return [useStyles];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/ishanchopra/Documents/Hackathon/email-client/Frontend/src/Components/Login/Login.js"],"names":["Avatar","Button","Container","Grid","Paper","Typography","LockIcon","React","useState","useStyles","Input","GoogleLogin","GoogleButton","Login","classes","showPassword","setShowPassword","showConfirmPassword","setShowConfirmPassword","isSignedUp","setIsSignedUp","formData","setFormData","email","password","confirmPassword","firstName","lastName","handleOnSubmit","e","console","log","handleChange","target","name","value","toggle","prev","handleShowPassword","handleShowConfirmPassword","googleSuccess","res","profile","profileObj","token","tokenId","error","googleFailure","paper","avatar","form","submit","renderProps","onClick","width","marginBottom","disabled","marginTop"],"mappings":"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","sourcesContent":["import {\n  Avatar,\n  Button,\n  Container,\n  Grid,\n  Paper,\n  Typography,\n} from \"@material-ui/core\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport React, { useState } from \"react\";\nimport useStyles from \"./styles\";\nimport Input from \"./Input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport GoogleButton from \"react-google-button\";\n\nconst Login = () => {\n  const classes = useStyles();\n  const [showPassword, setShowPassword] = useState(false);\n  const [showConfirmPassword, setShowConfirmPassword] = useState(false);\n  const [isSignedUp, setIsSignedUp] = useState(true);\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    firstName: \"\",\n    lastName: \"\",\n  });\n\n  const handleOnSubmit = (e) => {\n    console.log(\"Submitted\");\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const toggle = () => {\n    setFormData({\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\",\n      firstName: \"\",\n      lastName: \"\",\n    });\n    setIsSignedUp((prev) => !prev);\n    setShowPassword(false);\n    setShowConfirmPassword(false);\n  };\n\n  const handleShowPassword = () => {\n    setShowPassword((prev) => !prev);\n  };\n\n  const handleShowConfirmPassword = () => {\n    setShowConfirmPassword((prev) => !prev);\n  };\n\n  const googleSuccess = (res) => {\n    //console.log(res);\n    const profile = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      console.log(profile, token);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleFailure = (error) => {\n    console.log(error);\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockIcon />\n        </Avatar>\n        <Typography variant=\"h5\">\n          {isSignedUp ? \"Sign In\" : \"Sign Up\"}\n        </Typography>\n        <form className={classes.form} onSubmit={handleOnSubmit}>\n          <Grid container spacing={2}>\n            {!isSignedUp && (\n              <>\n                <Input\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  half\n                  autofocus\n                />\n                <Input\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <Input\n              name=\"email\"\n              value={formData.email}\n              label=\"Email\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <Input\n              name=\"password\"\n              value={formData.password}\n              label=\"Password\"\n              handleChange={handleChange}\n              handleShowPassword={handleShowPassword}\n              type={showPassword ? \"text\" : \"password\"}\n            />\n            {!isSignedUp && (\n              <Input\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                handleShowPassword={handleShowConfirmPassword}\n                handleChange={handleChange}\n                type={showConfirmPassword ? \"text\" : \"password\"}\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignedUp ? \"Sign in\" : \"Sign up\"}\n          </Button>\n\n          <GoogleLogin\n            clientId=\"795985652085-6ussjfntbaepe2fj9o244lntnbfk5su0.apps.googleusercontent.com\"\n            render={(renderProps) => (\n              <div class=\"g-signin2\" data-width=\"1000\" data-height=\"200\">\n                <GoogleButton\n                  onClick={renderProps.onClick}\n                  style={{ width: \"363px\", marginBottom: \"10px\" }}\n                  disabled={renderProps.disabled}\n                >\n                  Sign in with Google\n                </GoogleButton>\n              </div>\n            )}\n            onSuccess={googleSuccess}\n            onFailure={googleFailure}\n            style={{ marginTop: \"100px\" }}\n            cookiePolicy=\"single_host_origin\"\n          />\n\n          <Grid container justify=\"flex-end\">\n            <Button onClick={toggle}>\n              {isSignedUp\n                ? \"Don't have an account??Sign Up\"\n                : \"Already have an account!! Sign In\"}\n            </Button>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}